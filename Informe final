Algoritmos y estructura de datos
===============================
Trabajo Final FileExp
-------------
### Integrantes del equipo
* Angulo Valle William
* Izarra Ticlla Carlos Eduardo u20181c406
* Flores Oscar 

### Introducción
El presente trabajo se realizó con el objetivo de aplicar los conocimientos aprendidos durante el curso
de Algoritmos y Estructuras de datos en la realización de una aplicación para el manejo de grandes cantidades
de datos (archivos) de manera eficiente e ingeniosa.

###Indice

Objetivo del Estudiante
Capítulo 1: Presentación
Capítulo 2: Marco conceptual
Capítulo 3: Diseño del proyecto
Capítulo 4: Diseño del producto
Capítulo 5: Diseño del proceso de desarrollo de la solución
Conclusiones
Bibliografía
Anexos


###Objetivo del Estudiante

Implementar uh programa que ayude a facilitar la agilización de la busqueda de archivo. 

###Capítulo 1: Presentación



###Capítulo 2: Marco conceptual



###Capítulo 3: Diseño del proyecto



###Capítulo 4: Diseño del producto



###Capítulo 5: Diseño del proceso de desarrollo de la solución




### Motivación

Nuestra motivacion fue hacer un trabajo que pueda facilitar la busqueda de los archivos y el dasafio que presentaba al implementar 
en el programa los arboles, listas, vectores, recusividad.

### Problema: 



### Solución:



### Conclusión:
__

### Objetivos
_Nuestro objetivo es crear una librería que pueda ordenar DataFrames y crear nuevos apartir de este de manera eficiente y eficaz con algoritmos de ordenamiento._

* _Examinar los distintos tipos de estructuras de datos para poder recopilar su información para poder construir una mejor estructura._
* _Aplicar lo aprendido en clases, para darle un correcto funcionamiento a nuestro programa._
* _Disminuir la redundancia e inconsistencia de los datos._
* _Evitar dificultad en el acceso a los datos._
* _Crear e innovar en la creación del programa identificando funciones que pueden presentar un mayor rendimiento.
### Alcance de proyecto

_Mediante este proyecto, queremos emplear nuestros conocimientos en el curso, para poder implementar un programa que nos facilite el manejo de _dataframes_. Gracias a este programa podremos importar, indexar y filtrar datos. Además emplearemos algunos algoritmos de ordenamiento aprendidos en clase para ordenar los datos en las columnas. Para avanzar este proyecto, lo dividiremos en 3 hitos, en los cuales iremos avanzando diariamente, guardando y clonando el proyecto actual, gracias a GitHub. Debemos organizar y dividir tareas entre todos lo miembros del grupo para lograr terminar el proyecto a la fecha indicada y con todos los requerimientos._


### Marco conceptual

1. 

2. 

### Diagrama de clases

![Texto alternativo](algoritmos.png)
### Plan de trabajo detallado
_El proyecto estará disponible para todos los integrantes del grupo; sin embargo, constará de 3 copias, y uno principal, gracias a que GitHub nos permite crear nuevas ramas podemos cambiar el código continuamente y mostrarlo a los demás integrantes del grupo. Además de esto, GitHub nos permite utilizar herramientas como los milestones e issues los cuales nos permitirán asignarnos tareas y completarlas progresivamente. Los milestones son tareas en paquetes, de esta manera estarán elaborados los entregables e hitos, mientras que las tareas que están dentro de los entregables e hitos se encontrarán dentro de los issues. De esta manera nuestro plan de trabajo será eficiente y podremos ver el avance de cada integrante._


### Cronograma de trabajo

_ _


### Diagrama de clases de segundo nivel
![Texto alternativo](diagrma.png)

### Conclusiones
*_ _

*_ _

*_EL uso del indexado nos ayuda  a tener un mayor orden en el trabajo ya que es así como podemos realizar una busqueda , 
ademas de el ordenamiento adecuado._

### Referencias:
Windows Forms (2017). Documentation. Recuperado de: https://docs.microsoft.com/en-us/dotnet/framework/winforms/
CPLUSPLUS. Vector. Recuperado de: http://www.cplusplus.com/reference/vector/vector/?kw=vector
CPLUSPLUS. std::string. Recuperado de:http://www.cplusplus.com/reference/string/string/?kw=string
CPPREFERENCE. Filesystem library. Recuperado de: https://en.cppreference.com/w/cpp/experimental/fs
###Bibliografía
###Anexos

YouTube Programación ATS: https://www.youtube.com/watch?v=ld4nzao5XAc
